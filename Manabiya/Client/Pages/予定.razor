@page "/予定"
@using Marimo.Manabiya.Shared
@using BlazorFluentUI
@inject HttpClient Http

<h1>今後の予定</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (予定一覧 == null)
{
    <Spinner Size=@SpinnerSize.Large Label="Loading" />
}
else
{
    <ActionButton IconName="Add" OnClick=@(_=> isダイアログ表示中=true)>
        新規追加
    </ActionButton>
    
        <Dialog Title="登録"
                IsOpen=@isダイアログ表示中
                IsBlocking=true
                OnDismiss=@(_=> isダイアログ表示中=false )>
            <ChildContent>
                <EditForm Model=@新規テーマ OnValidSubmit="追加" id="新規フォーム">
                    <DataAnnotationsValidator />
                    <FluentUIValidationSummary />
                    <TextField Required=true @bind-Value="新規テーマ.タイトル" />
                </EditForm>
            </ChildContent>
            <FooterTemplate>
                <SubmitButton Text="OK" form="新規フォーム" />
                <DefaultButton Text="キャンセル" OnClick=@(_=> isダイアログ表示中=false) />
            </FooterTemplate>
        </Dialog>
    
    @foreach (var 各予定 in 予定一覧)
    {
        <div>@各予定.タイトル</div>
    }
}

@code {

    bool isダイアログ表示中 = false;

    勉強会テーマ 新規テーマ = new();

    勉強会テーマ[] 予定一覧;

    protected override async Task OnInitializedAsync()
    {
        予定一覧 = await Http.GetFromJsonAsync<勉強会テーマ[]>("勉強会テーマ");
    }

    async Task 追加()
    {
        await Http.PostAsJsonAsync("勉強会テーマ", 新規テーマ);
        新規テーマ = new();
        isダイアログ表示中 = false;

        await OnInitializedAsync();
    }

}
