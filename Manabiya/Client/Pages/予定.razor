@page "/予定"
@using Marimo.Manabiya.Shared
@using Marimo.Manabiya.Client.ViewModels
@using BlazorFluentUI
@inject 予定PageViewModel vm
<h1>今後の予定</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (vm.予定一覧 == null)
{
    <Spinner Size=@SpinnerSize.Large Label="Loading" />
}
else
{
    <ActionButton IconName="add"
                  Command="vm.ダイアログの表示を切り替える"
                  CommandParameter=true>
        新規追加
    </ActionButton>

    <Dialog Title="登録"
            IsOpen=@vm.isダイアログ表示中
            IsBlocking=true
            OnDismiss=@(_ => vm.ダイアログの表示を切り替える.Execute(false) )>
        <ChildContent>
            <EditForm id="新規フォーム"
                      Model=@vm.新規テーマ
                      OnValidSubmit=@(async _ => await vm.追加するCommand.ExecuteAsync(null))>
                <DataAnnotationsValidator />
                <FluentUIValidationSummary />
                <TextField Required=true @bind-Value=@vm.新規テーマ.タイトル />
            </EditForm>
        </ChildContent>
        <FooterTemplate>
            <SubmitButton Text="OK" form="新規フォーム" />
            <DefaultButton Text="キャンセル"
                           Command="vm.ダイアログの表示を切り替える" 
                           CommandParameter=false />
        </FooterTemplate>
    </Dialog>

    @foreach (var 各予定 in vm.予定一覧)
    {
        <div>@各予定.タイトル</div>
    }
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await vm.予定一覧を読み込むCommand.ExecuteAsync(null);
        await base.OnInitializedAsync();
        vm.PropertyChanged += (_, _) => StateHasChanged();
    }
}
